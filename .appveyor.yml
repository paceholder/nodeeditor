clone_depth: 5

environment:
  matrix:
    - GENERATOR : "Visual Studio 15 2017 Win64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      QTDIR: C:\Qt\5.12.2\msvc2017_64
      PLATFORM: x64
    - GENERATOR : "Visual Studio 15 2017"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      QTDIR: C:\Qt\5.12.2\msvc2017
      PLATFORM: Win32
    - GENERATOR : "MinGW Makefiles"
      QTDIR: C:\Qt\5.11.3\mingw53_32
      PLATFORM: x86
      CMAKE_CXX_FLAGS_INIT: -DCATCH_CONFIG_NO_CPP11_TO_STRING

configuration:
  - Release

install:
  - set PATH=%QTDIR%\bin;%PATH%
  - set Qt5_DIR=%QTDIR%\lib\cmake\Qt5
  - set PATH=C:\MinGW\bin;C:\MinGW\msys\1.0;%PATH%
  - set PATH=C:\Qt\Tools\mingw530_32;%PATH%
  - set PATH=%PATH:C:\Program Files\Git\usr\bin=% # trick to remove sh.exe

before_build:
  - mkdir build
  - cd build
  - mkdir bin
  - set OUTPUT_DIR=%cd%\bin
  - cmake "-G%GENERATOR%"
    -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG="%OUTPUT_DIR%"
    -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE="%OUTPUT_DIR%"
    -DCMAKE_CXX_FLAGS_INIT="%CMAKE_CXX_FLAGS_INIT%"
    ..


build_script:
  - cmake --build .

test_script:
  - ps: $env:isX86 = $env:PLATFORM.Contains("x86")
  - IF %isX86% == False ctest --output-on-failure -C Debug


after_build:
  - 7z a examples.zip %APPVEYOR_BUILD_FOLDER%/build/bin
  - cmd: cd
  - cmd: dir \S \P "examples.zip"

artifacts:
  - path: build\examples.zip
    name: ex

#deploy:
  #release: $(APPVEYOR_REPO_TAG_NAME)
  #provider: GitHub
  #artifact: /.*\.exe/
  #auth_token:
    #secure: j0nBV9xVItdG3j6d0gHoyvrzi7TOhAy9/QIeyCbFeP8PTqq7DPr1oYwL5WIkPaXe
  #draft: false
  #prerelease: false
  #on:
    #appveyor_repo_tag: true
